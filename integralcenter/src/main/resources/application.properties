

# tomcat配置
server.port=8082
server.tomcat.accesslog.prefix=access_log
server.tomcat.accesslog.directory=./logs
server.tomcat.accesslog.enabled=true

# 应用配置
spring.application.name=integralcenter


# servler、json配置
server.servlet.context-path=/integralcenter/api
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8
spring.jackson.default-property-inclusion=non_null

# 数据库配置
spring.datasource.driverClassName=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/integralcenter?useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=

# 日志配置
logging.config=classpath:logback.xml
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=INFO
spring.output.ansi.enabled=DETECT

# jap、hibernate配置
spring.jpa.show-sql=false
spring.data.jpa.repositories.enabled=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.format_sql=true

############# RabbitMQ 基本信息配置
spring.rabbitmq.host=192.168.137.101
spring.rabbitmq.port=5672
spring.rabbitmq.username=lazy
spring.rabbitmq.password=111111
spring.rabbitmq.virtual-host=vhost_hello

############# RabbitMQ 消费相关配置
# direct：每个consumer都有独立的channel，线程共享channel
# simple: 每个线程都有独立的channel，消费者（container）共享channel,
# 官方建议：应用程序应该更喜欢每个线程使用一个Channel，而不是在多个线程之间共享同一Channel
# 所以这里推荐使用simple
spring.rabbitmq.listener.type=simple
# 手动确认消息模式
spring.rabbitmq.listener.simple.acknowledge-mode=manual
# 未确认交付的最大数量。一旦数量达到配置的数量，RabbitMQ将停止在通道上传递更多消息
# 就是你只要有一条消息没有ack，则RabbitMQ不会再发送消息给这个channel
spring.rabbitmq.listener.simple.prefetch=1
# 配置最大并发线程数量，也就是每个队列消费者（container）数量
spring.rabbitmq.listener.simple.max-concurrency=2
# 配置最小初始化线程数量，也就是每个队列消费者（container）数量
spring.rabbitmq.listener.simple.concurrency=1
# 启动时声明队列不可用则失败，运行时队列被删除则停止消费者（container）
spring.rabbitmq.listener.simple.missing-queues-fatal=true
# 默认情况下拒绝消息是否重新排队
spring.rabbitmq.listener.simple.default-requeue-rejected=false
# 启动应用时启动消费者（container）
spring.rabbitmq.listener.simple.auto-startup=true
# 多久发布一次空闲消费者（container）事件
spring.rabbitmq.listener.simple.idle-event-interval=5000ms
# 开启重试
spring.rabbitmq.listener.simple.retry.enabled=true
spring.rabbitmq.listener.simple.retry.max-attempts=3
spring.rabbitmq.listener.simple.retry.initial-interval=1000ms
spring.rabbitmq.listener.simple.retry.max-interval=10000ms
spring.rabbitmq.listener.simple.retry.multiplier=1.0

# 连接超时，默认永久等待，这里设置为5s
spring.rabbitmq.connection-timeout=5000ms
# 等待获取channel的等待时间，为0为创建,这里设置为30s
spring.rabbitmq.cache.channel.checkout-timeout=30000ms
# 当checkout-timeout > 0时才生效，否则每次不够就新创建
spring.rabbitmq.cache.channel.size=10
# 单个connection，多个channel共享一条TCP连接
spring.rabbitmq.cache.connection.mode=channel
